{
    "openapi": "3.0.2",
    "info": {
        "contact": {
            "email": "apiteam@swagger.io"
        },
        "termsOfService": "http://swagger.io/terms/",
        "version": "1.0.4",
        "license": {
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html",
            "name": "Apache 2.0"
        },
        "title": "Swagger Petstore - OpenAPI 3.0",
        "description": "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\nSome useful links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml) "
    },
    "externalDocs": {
        "url": "http://swagger.io",
        "description": "Find out more about Swagger"
    },
    "components": {
        "schemas": {
            "Customer": {
                "properties": {
                    "id": {
                        "example": 100000,
                        "type": "integer",
                        "format": "int64"
                    },
                    "username": {
                        "example": "fehguy",
                        "type": "string"
                    },
                    "address": {
                        "items": {
                            "properties": {
                                "zip": {
                                    "example": "94301",
                                    "type": "string"
                                },
                                "street": {
                                    "example": "437 Lytton",
                                    "type": "string"
                                },
                                "state": {
                                    "example": "CA",
                                    "type": "string"
                                },
                                "city": {
                                    "example": "Palo Alto",
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "address"
                            }
                        },
                        "type": "array",
                        "xml": {
                            "wrapped": true,
                            "name": "addresses"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "customer"
                }
            },
            "Order": {
                "properties": {
                    "complete": {
                        "type": "boolean"
                    },
                    "petId": {
                        "example": 198772,
                        "type": "integer",
                        "format": "int64"
                    },
                    "shipDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "example": "approved",
                        "type": "string",
                        "enum": [
                            "placed",
                            "approved",
                            "delivered"
                        ],
                        "description": "Order Status"
                    },
                    "id": {
                        "example": 10,
                        "type": "integer",
                        "format": "int64"
                    },
                    "quantity": {
                        "example": 7,
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "order"
                }
            },
            "Tag": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "tag"
                }
            },
            "Pet": {
                "required": [
                    "name",
                    "photoUrls"
                ],
                "properties": {
                    "photoUrls": {
                        "items": {
                            "type": "string",
                            "xml": {
                                "name": "photoUrl"
                            }
                        },
                        "type": "array",
                        "xml": {
                            "wrapped": true
                        }
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "available",
                            "pending",
                            "sold"
                        ],
                        "description": "pet status in the store"
                    },
                    "category": {
                        "properties": {
                            "id": {
                                "example": 1,
                                "type": "integer",
                                "format": "int64"
                            },
                            "name": {
                                "example": "Dogs",
                                "type": "string"
                            }
                        },
                        "type": "object",
                        "xml": {
                            "name": "category"
                        }
                    },
                    "id": {
                        "example": 10,
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "example": "doggie",
                        "type": "string"
                    },
                    "tags": {
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int64"
                                },
                                "name": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "tag"
                            }
                        },
                        "type": "array",
                        "xml": {
                            "wrapped": true
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "pet"
                }
            },
            "Category": {
                "properties": {
                    "id": {
                        "example": 1,
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "example": "Dogs",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "category"
                }
            },
            "User": {
                "properties": {
                    "lastName": {
                        "example": "James",
                        "type": "string"
                    },
                    "userStatus": {
                        "example": 1,
                        "type": "integer",
                        "description": "User Status",
                        "format": "int32"
                    },
                    "password": {
                        "example": "12345",
                        "type": "string"
                    },
                    "id": {
                        "example": 10,
                        "type": "integer",
                        "format": "int64"
                    },
                    "firstName": {
                        "example": "John",
                        "type": "string"
                    },
                    "phone": {
                        "example": "12345",
                        "type": "string"
                    },
                    "username": {
                        "example": "theUser",
                        "type": "string"
                    },
                    "email": {
                        "example": "john@email.com",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "user"
                }
            },
            "Address": {
                "properties": {
                    "zip": {
                        "example": "94301",
                        "type": "string"
                    },
                    "street": {
                        "example": "437 Lytton",
                        "type": "string"
                    },
                    "state": {
                        "example": "CA",
                        "type": "string"
                    },
                    "city": {
                        "example": "Palo Alto",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "address"
                }
            },
            "ApiResponse": {
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "##default"
                }
            }
        },
        "securitySchemes": {
            "api_key": {
                "in": "header",
                "name": "api_key",
                "type": "apiKey"
            },
            "petstore_auth": {
                "flows": {
                    "implicit": {
                        "authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
                        "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                        }
                    }
                },
                "type": "oauth2"
            }
        },
        "requestBodies": {
            "UserArray": {
                "content": {
                    "application/json": {
                        "schema": {
                            "items": {
                                "properties": {
                                    "lastName": {
                                        "example": "James",
                                        "type": "string"
                                    },
                                    "userStatus": {
                                        "example": 1,
                                        "type": "integer",
                                        "description": "User Status",
                                        "format": "int32"
                                    },
                                    "password": {
                                        "example": "12345",
                                        "type": "string"
                                    },
                                    "id": {
                                        "example": 10,
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "firstName": {
                                        "example": "John",
                                        "type": "string"
                                    },
                                    "phone": {
                                        "example": "12345",
                                        "type": "string"
                                    },
                                    "username": {
                                        "example": "theUser",
                                        "type": "string"
                                    },
                                    "email": {
                                        "example": "john@email.com",
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "xml": {
                                    "name": "user"
                                }
                            },
                            "type": "array"
                        }
                    }
                },
                "description": "List of user object"
            },
            "Pet": {
                "content": {
                    "application/json": {
                        "schema": {
                            "required": [
                                "name",
                                "photoUrls"
                            ],
                            "properties": {
                                "photoUrls": {
                                    "items": {
                                        "type": "string",
                                        "xml": {
                                            "name": "photoUrl"
                                        }
                                    },
                                    "type": "array",
                                    "xml": {
                                        "wrapped": true
                                    }
                                },
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "available",
                                        "pending",
                                        "sold"
                                    ],
                                    "description": "pet status in the store"
                                },
                                "category": {
                                    "properties": {
                                        "id": {
                                            "example": 1,
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "name": {
                                            "example": "Dogs",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "xml": {
                                        "name": "category"
                                    }
                                },
                                "id": {
                                    "example": 10,
                                    "type": "integer",
                                    "format": "int64"
                                },
                                "name": {
                                    "example": "doggie",
                                    "type": "string"
                                },
                                "tags": {
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "format": "int64"
                                            },
                                            "name": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object",
                                        "xml": {
                                            "name": "tag"
                                        }
                                    },
                                    "type": "array",
                                    "xml": {
                                        "wrapped": true
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "pet"
                            }
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "required": [
                                "name",
                                "photoUrls"
                            ],
                            "properties": {
                                "photoUrls": {
                                    "items": {
                                        "type": "string",
                                        "xml": {
                                            "name": "photoUrl"
                                        }
                                    },
                                    "type": "array",
                                    "xml": {
                                        "wrapped": true
                                    }
                                },
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "available",
                                        "pending",
                                        "sold"
                                    ],
                                    "description": "pet status in the store"
                                },
                                "category": {
                                    "properties": {
                                        "id": {
                                            "example": 1,
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "name": {
                                            "example": "Dogs",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "xml": {
                                        "name": "category"
                                    }
                                },
                                "id": {
                                    "example": 10,
                                    "type": "integer",
                                    "format": "int64"
                                },
                                "name": {
                                    "example": "doggie",
                                    "type": "string"
                                },
                                "tags": {
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "format": "int64"
                                            },
                                            "name": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object",
                                        "xml": {
                                            "name": "tag"
                                        }
                                    },
                                    "type": "array",
                                    "xml": {
                                        "wrapped": true
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "pet"
                            }
                        }
                    }
                },
                "description": "Pet object that needs to be added to the store"
            }
        }
    },
    "basePath": "/",
    "servers": [
        {
            "url": "/api/v3"
        }
    ],
    "tags": [
        {
            "externalDocs": {
                "url": "http://swagger.io",
                "description": "Find out more"
            },
            "name": "pet",
            "description": "Everything about your Pets"
        },
        {
            "name": "store",
            "description": "Operations about user"
        },
        {
            "externalDocs": {
                "url": "http://swagger.io",
                "description": "Find out more about our store"
            },
            "name": "user",
            "description": "Access to Petstore orders"
        }
    ],
    "paths": {
        "/pet/findByStatus": {
            "get": {
                "security": [
                    {
                        "petstore_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "explode": true,
                        "required": false,
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "default": "available",
                            "type": "string",
                            "enum": [
                                "available",
                                "pending",
                                "sold"
                            ]
                        },
                        "description": "Status values that need to be considered for filter"
                    }
                ],
                "x-resourceId": "ae00f0e6050159ee0a646cd4f9103b47",
                "summary": "Finds Pets by status",
                "operationId": "findPetsByStatus",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "required": [
                                            "name",
                                            "photoUrls"
                                        ],
                                        "properties": {
                                            "photoUrls": {
                                                "items": {
                                                    "type": "string",
                                                    "xml": {
                                                        "name": "photoUrl"
                                                    }
                                                },
                                                "type": "array",
                                                "xml": {
                                                    "wrapped": true
                                                }
                                            },
                                            "status": {
                                                "type": "string",
                                                "enum": [
                                                    "available",
                                                    "pending",
                                                    "sold"
                                                ],
                                                "description": "pet status in the store"
                                            },
                                            "category": {
                                                "properties": {
                                                    "id": {
                                                        "example": 1,
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "name": {
                                                        "example": "Dogs",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "xml": {
                                                    "name": "category"
                                                }
                                            },
                                            "id": {
                                                "example": 10,
                                                "type": "integer",
                                                "format": "int64"
                                            },
                                            "name": {
                                                "example": "doggie",
                                                "type": "string"
                                            },
                                            "tags": {
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "xml": {
                                                        "name": "tag"
                                                    }
                                                },
                                                "type": "array",
                                                "xml": {
                                                    "wrapped": true
                                                }
                                            }
                                        },
                                        "type": "object",
                                        "xml": {
                                            "name": "pet"
                                        }
                                    },
                                    "type": "array"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "items": {
                                        "required": [
                                            "name",
                                            "photoUrls"
                                        ],
                                        "properties": {
                                            "photoUrls": {
                                                "items": {
                                                    "type": "string",
                                                    "xml": {
                                                        "name": "photoUrl"
                                                    }
                                                },
                                                "type": "array",
                                                "xml": {
                                                    "wrapped": true
                                                }
                                            },
                                            "status": {
                                                "type": "string",
                                                "enum": [
                                                    "available",
                                                    "pending",
                                                    "sold"
                                                ],
                                                "description": "pet status in the store"
                                            },
                                            "category": {
                                                "properties": {
                                                    "id": {
                                                        "example": 1,
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "name": {
                                                        "example": "Dogs",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "xml": {
                                                    "name": "category"
                                                }
                                            },
                                            "id": {
                                                "example": 10,
                                                "type": "integer",
                                                "format": "int64"
                                            },
                                            "name": {
                                                "example": "doggie",
                                                "type": "string"
                                            },
                                            "tags": {
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "xml": {
                                                        "name": "tag"
                                                    }
                                                },
                                                "type": "array",
                                                "xml": {
                                                    "wrapped": true
                                                }
                                            }
                                        },
                                        "type": "object",
                                        "xml": {
                                            "name": "pet"
                                        }
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid status value"
                    },
                    "x-resourceId": "a9f0a3a63fe6b5bd954760c6ac09e85c"
                },
                "description": "Multiple status values can be provided with comma separated strings",
                "tags": [
                    "pet"
                ]
            },
            "x-resourceId": "bd1eb80c97ccfd302a743f421a3cf24c"
        },
        "/pet/{petId}/uploadImage": {
            "x-resourceId": "17a0869f4cf2e5679138a2a6e6c7c61d",
            "post": {
                "security": [
                    {
                        "petstore_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "petId",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "ID of pet to update"
                    },
                    {
                        "required": false,
                        "in": "query",
                        "name": "additionalMetadata",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Additional Metadata"
                    }
                ],
                "x-resourceId": "9e4f710106e141453d590f171c68067d",
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    },
                    "x-resourceId": "1be38aa366c4b7daef5e4b527902a97b"
                },
                "summary": "uploads an image",
                "operationId": "uploadFile",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "xml": {
                                        "name": "##default"
                                    }
                                }
                            }
                        },
                        "description": "successful operation"
                    },
                    "x-resourceId": "a9f0a3a63fe6b5bd954760c6ac09e85c"
                },
                "description": "",
                "tags": [
                    "pet"
                ]
            }
        },
        "/user/login": {
            "get": {
                "parameters": [
                    {
                        "required": false,
                        "in": "query",
                        "name": "username",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The user name for login"
                    },
                    {
                        "required": false,
                        "in": "query",
                        "name": "password",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The password for login in clear text"
                    }
                ],
                "x-resourceId": "0fe10d29e0b96d14e9503bfc21b09768",
                "summary": "Logs user into the system",
                "operationId": "loginUser",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "X-Expires-After": {
                                "schema": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "description": "date in UTC when toekn expires"
                            },
                            "X-Rate-Limit": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "description": "calls per hour allowed by the user"
                            }
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid username/password supplied"
                    },
                    "x-resourceId": "a9f0a3a63fe6b5bd954760c6ac09e85c"
                },
                "description": "",
                "tags": [
                    "user"
                ]
            },
            "x-resourceId": "8c230a505af1f73ea03e4fe84a679dd0"
        },
        "/store/order": {
            "x-resourceId": "577f261c54f766f1124e7787576eaf1d",
            "post": {
                "x-resourceId": "def035167a14c9962a139c2864e719eb",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "complete": {
                                        "type": "boolean"
                                    },
                                    "petId": {
                                        "example": 198772,
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "shipDate": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "status": {
                                        "example": "approved",
                                        "type": "string",
                                        "enum": [
                                            "placed",
                                            "approved",
                                            "delivered"
                                        ],
                                        "description": "Order Status"
                                    },
                                    "id": {
                                        "example": 10,
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "quantity": {
                                        "example": 7,
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                },
                                "type": "object",
                                "xml": {
                                    "name": "order"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "complete": {
                                        "type": "boolean"
                                    },
                                    "petId": {
                                        "example": 198772,
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "shipDate": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "status": {
                                        "example": "approved",
                                        "type": "string",
                                        "enum": [
                                            "placed",
                                            "approved",
                                            "delivered"
                                        ],
                                        "description": "Order Status"
                                    },
                                    "id": {
                                        "example": 10,
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "quantity": {
                                        "example": 7,
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                },
                                "type": "object",
                                "xml": {
                                    "name": "order"
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "complete": {
                                        "type": "boolean"
                                    },
                                    "petId": {
                                        "example": 198772,
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "shipDate": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "status": {
                                        "example": "approved",
                                        "type": "string",
                                        "enum": [
                                            "placed",
                                            "approved",
                                            "delivered"
                                        ],
                                        "description": "Order Status"
                                    },
                                    "id": {
                                        "example": 10,
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "quantity": {
                                        "example": 7,
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                },
                                "type": "object",
                                "xml": {
                                    "name": "order"
                                }
                            }
                        }
                    },
                    "x-resourceId": "1be38aa366c4b7daef5e4b527902a97b"
                },
                "summary": "Place an order for a pet",
                "operationId": "placeOrder",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "complete": {
                                            "type": "boolean"
                                        },
                                        "petId": {
                                            "example": 198772,
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "shipDate": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "status": {
                                            "example": "approved",
                                            "type": "string",
                                            "enum": [
                                                "placed",
                                                "approved",
                                                "delivered"
                                            ],
                                            "description": "Order Status"
                                        },
                                        "id": {
                                            "example": 10,
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "quantity": {
                                            "example": 7,
                                            "type": "integer",
                                            "format": "int32"
                                        }
                                    },
                                    "type": "object",
                                    "xml": {
                                        "name": "order"
                                    }
                                }
                            }
                        },
                        "description": "successful operation"
                    },
                    "405": {
                        "description": "Invalid input"
                    },
                    "x-resourceId": "a9f0a3a63fe6b5bd954760c6ac09e85c"
                },
                "description": "Place a new order in the store",
                "tags": [
                    "store"
                ]
            }
        },
        "/pet/{petId}": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    },
                    {
                        "petstore_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "petId",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "ID of pet to return"
                    }
                ],
                "x-resourceId": "289ec76edc33d50aebf51bcc60d9a001",
                "summary": "Find pet by ID",
                "operationId": "getPetById",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "name",
                                        "photoUrls"
                                    ],
                                    "properties": {
                                        "photoUrls": {
                                            "items": {
                                                "type": "string",
                                                "xml": {
                                                    "name": "photoUrl"
                                                }
                                            },
                                            "type": "array",
                                            "xml": {
                                                "wrapped": true
                                            }
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "available",
                                                "pending",
                                                "sold"
                                            ],
                                            "description": "pet status in the store"
                                        },
                                        "category": {
                                            "properties": {
                                                "id": {
                                                    "example": 1,
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "name": {
                                                    "example": "Dogs",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object",
                                            "xml": {
                                                "name": "category"
                                            }
                                        },
                                        "id": {
                                            "example": 10,
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "name": {
                                            "example": "doggie",
                                            "type": "string"
                                        },
                                        "tags": {
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "xml": {
                                                    "name": "tag"
                                                }
                                            },
                                            "type": "array",
                                            "xml": {
                                                "wrapped": true
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "xml": {
                                        "name": "pet"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "required": [
                                        "name",
                                        "photoUrls"
                                    ],
                                    "properties": {
                                        "photoUrls": {
                                            "items": {
                                                "type": "string",
                                                "xml": {
                                                    "name": "photoUrl"
                                                }
                                            },
                                            "type": "array",
                                            "xml": {
                                                "wrapped": true
                                            }
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "available",
                                                "pending",
                                                "sold"
                                            ],
                                            "description": "pet status in the store"
                                        },
                                        "category": {
                                            "properties": {
                                                "id": {
                                                    "example": 1,
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "name": {
                                                    "example": "Dogs",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object",
                                            "xml": {
                                                "name": "category"
                                            }
                                        },
                                        "id": {
                                            "example": 10,
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "name": {
                                            "example": "doggie",
                                            "type": "string"
                                        },
                                        "tags": {
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "xml": {
                                                    "name": "tag"
                                                }
                                            },
                                            "type": "array",
                                            "xml": {
                                                "wrapped": true
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "xml": {
                                        "name": "pet"
                                    }
                                }
                            }
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Pet not found"
                    },
                    "x-resourceId": "a9f0a3a63fe6b5bd954760c6ac09e85c"
                },
                "description": "Returns a single pet",
                "tags": [
                    "pet"
                ]
            },
            "delete": {
                "security": [
                    {
                        "petstore_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "required": false,
                        "in": "header",
                        "name": "api_key",
                        "schema": {
                            "type": "string"
                        },
                        "description": ""
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "petId",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "Pet id to delete"
                    }
                ],
                "x-resourceId": "7ffeacade106c2016ba43af208b18847",
                "summary": "Deletes a pet",
                "operationId": "deletePet",
                "responses": {
                    "400": {
                        "description": "Invalid pet value"
                    },
                    "x-resourceId": "a9f0a3a63fe6b5bd954760c6ac09e85c"
                },
                "description": "",
                "tags": [
                    "pet"
                ]
            },
            "x-resourceId": "2e916283aa21092666a1bda1f6462022",
            "post": {
                "security": [
                    {
                        "petstore_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "petId",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "ID of pet that needs to be updated"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Name of pet that needs to be updated"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Status of pet that needs to be updated"
                    }
                ],
                "x-resourceId": "7c4ffda3d23450f92473c3b23ecaf985",
                "summary": "Updates a pet in the store with form data",
                "operationId": "updatePetWithForm",
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    },
                    "x-resourceId": "a9f0a3a63fe6b5bd954760c6ac09e85c"
                },
                "description": "",
                "tags": [
                    "pet"
                ]
            }
        },
        "/pet": {
            "put": {
                "security": [
                    {
                        "petstore_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }
                ],
                "x-resourceId": "7f46fd23f0797a51bcdec21780011e57",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "name",
                                    "photoUrls"
                                ],
                                "properties": {
                                    "photoUrls": {
                                        "items": {
                                            "type": "string",
                                            "xml": {
                                                "name": "photoUrl"
                                            }
                                        },
                                        "type": "array",
                                        "xml": {
                                            "wrapped": true
                                        }
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "available",
                                            "pending",
                                            "sold"
                                        ],
                                        "description": "pet status in the store"
                                    },
                                    "category": {
                                        "properties": {
                                            "id": {
                                                "example": 1,
                                                "type": "integer",
                                                "format": "int64"
                                            },
                                            "name": {
                                                "example": "Dogs",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object",
                                        "xml": {
                                            "name": "category"
                                        }
                                    },
                                    "id": {
                                        "example": 10,
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "name": {
                                        "example": "doggie",
                                        "type": "string"
                                    },
                                    "tags": {
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object",
                                            "xml": {
                                                "name": "tag"
                                            }
                                        },
                                        "type": "array",
                                        "xml": {
                                            "wrapped": true
                                        }
                                    }
                                },
                                "type": "object",
                                "xml": {
                                    "name": "pet"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "photoUrls"
                                ],
                                "properties": {
                                    "photoUrls": {
                                        "items": {
                                            "type": "string",
                                            "xml": {
                                                "name": "photoUrl"
                                            }
                                        },
                                        "type": "array",
                                        "xml": {
                                            "wrapped": true
                                        }
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "available",
                                            "pending",
                                            "sold"
                                        ],
                                        "description": "pet status in the store"
                                    },
                                    "category": {
                                        "properties": {
                                            "id": {
                                                "example": 1,
                                                "type": "integer",
                                                "format": "int64"
                                            },
                                            "name": {
                                                "example": "Dogs",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object",
                                        "xml": {
                                            "name": "category"
                                        }
                                    },
                                    "id": {
                                        "example": 10,
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "name": {
                                        "example": "doggie",
                                        "type": "string"
                                    },
                                    "tags": {
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object",
                                            "xml": {
                                                "name": "tag"
                                            }
                                        },
                                        "type": "array",
                                        "xml": {
                                            "wrapped": true
                                        }
                                    }
                                },
                                "type": "object",
                                "xml": {
                                    "name": "pet"
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "required": [
                                    "name",
                                    "photoUrls"
                                ],
                                "properties": {
                                    "photoUrls": {
                                        "items": {
                                            "type": "string",
                                            "xml": {
                                                "name": "photoUrl"
                                            }
                                        },
                                        "type": "array",
                                        "xml": {
                                            "wrapped": true
                                        }
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "available",
                                            "pending",
                                            "sold"
                                        ],
                                        "description": "pet status in the store"
                                    },
                                    "category": {
                                        "properties": {
                                            "id": {
                                                "example": 1,
                                                "type": "integer",
                                                "format": "int64"
                                            },
                                            "name": {
                                                "example": "Dogs",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object",
                                        "xml": {
                                            "name": "category"
                                        }
                                    },
                                    "id": {
                                        "example": 10,
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "name": {
                                        "example": "doggie",
                                        "type": "string"
                                    },
                                    "tags": {
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object",
                                            "xml": {
                                                "name": "tag"
                                            }
                                        },
                                        "type": "array",
                                        "xml": {
                                            "wrapped": true
                                        }
                                    }
                                },
                                "type": "object",
                                "xml": {
                                    "name": "pet"
                                }
                            }
                        }
                    },
                    "required": true,
                    "x-resourceId": "1be38aa366c4b7daef5e4b527902a97b",
                    "description": "Update an existent pet in the store"
                },
                "summary": "Update an existing pet",
                "operationId": "updatePet",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "name",
                                        "photoUrls"
                                    ],
                                    "properties": {
                                        "photoUrls": {
                                            "items": {
                                                "type": "string",
                                                "xml": {
                                                    "name": "photoUrl"
                                                }
                                            },
                                            "type": "array",
                                            "xml": {
                                                "wrapped": true
                                            }
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "available",
                                                "pending",
                                                "sold"
                                            ],
                                            "description": "pet status in the store"
                                        },
                                        "category": {
                                            "properties": {
                                                "id": {
                                                    "example": 1,
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "name": {
                                                    "example": "Dogs",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object",
                                            "xml": {
                                                "name": "category"
                                            }
                                        },
                                        "id": {
                                            "example": 10,
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "name": {
                                            "example": "doggie",
                                            "type": "string"
                                        },
                                        "tags": {
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "xml": {
                                                    "name": "tag"
                                                }
                                            },
                                            "type": "array",
                                            "xml": {
                                                "wrapped": true
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "xml": {
                                        "name": "pet"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "required": [
                                        "name",
                                        "photoUrls"
                                    ],
                                    "properties": {
                                        "photoUrls": {
                                            "items": {
                                                "type": "string",
                                                "xml": {
                                                    "name": "photoUrl"
                                                }
                                            },
                                            "type": "array",
                                            "xml": {
                                                "wrapped": true
                                            }
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "available",
                                                "pending",
                                                "sold"
                                            ],
                                            "description": "pet status in the store"
                                        },
                                        "category": {
                                            "properties": {
                                                "id": {
                                                    "example": 1,
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "name": {
                                                    "example": "Dogs",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object",
                                            "xml": {
                                                "name": "category"
                                            }
                                        },
                                        "id": {
                                            "example": 10,
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "name": {
                                            "example": "doggie",
                                            "type": "string"
                                        },
                                        "tags": {
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "xml": {
                                                    "name": "tag"
                                                }
                                            },
                                            "type": "array",
                                            "xml": {
                                                "wrapped": true
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "xml": {
                                        "name": "pet"
                                    }
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Pet not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    },
                    "x-resourceId": "a9f0a3a63fe6b5bd954760c6ac09e85c"
                },
                "description": "Update an existing pet by Id",
                "tags": [
                    "pet"
                ]
            },
            "x-resourceId": "2ff5607d766c7b8239a824b0392250bf",
            "post": {
                "security": [
                    {
                        "petstore_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }
                ],
                "x-resourceId": "3fa46671f0178c4741c10211262913e0",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "name",
                                    "photoUrls"
                                ],
                                "properties": {
                                    "photoUrls": {
                                        "items": {
                                            "type": "string",
                                            "xml": {
                                                "name": "photoUrl"
                                            }
                                        },
                                        "type": "array",
                                        "xml": {
                                            "wrapped": true
                                        }
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "available",
                                            "pending",
                                            "sold"
                                        ],
                                        "description": "pet status in the store"
                                    },
                                    "category": {
                                        "properties": {
                                            "id": {
                                                "example": 1,
                                                "type": "integer",
                                                "format": "int64"
                                            },
                                            "name": {
                                                "example": "Dogs",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object",
                                        "xml": {
                                            "name": "category"
                                        }
                                    },
                                    "id": {
                                        "example": 10,
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "name": {
                                        "example": "doggie",
                                        "type": "string"
                                    },
                                    "tags": {
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object",
                                            "xml": {
                                                "name": "tag"
                                            }
                                        },
                                        "type": "array",
                                        "xml": {
                                            "wrapped": true
                                        }
                                    }
                                },
                                "type": "object",
                                "xml": {
                                    "name": "pet"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "photoUrls"
                                ],
                                "properties": {
                                    "photoUrls": {
                                        "items": {
                                            "type": "string",
                                            "xml": {
                                                "name": "photoUrl"
                                            }
                                        },
                                        "type": "array",
                                        "xml": {
                                            "wrapped": true
                                        }
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "available",
                                            "pending",
                                            "sold"
                                        ],
                                        "description": "pet status in the store"
                                    },
                                    "category": {
                                        "properties": {
                                            "id": {
                                                "example": 1,
                                                "type": "integer",
                                                "format": "int64"
                                            },
                                            "name": {
                                                "example": "Dogs",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object",
                                        "xml": {
                                            "name": "category"
                                        }
                                    },
                                    "id": {
                                        "example": 10,
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "name": {
                                        "example": "doggie",
                                        "type": "string"
                                    },
                                    "tags": {
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object",
                                            "xml": {
                                                "name": "tag"
                                            }
                                        },
                                        "type": "array",
                                        "xml": {
                                            "wrapped": true
                                        }
                                    }
                                },
                                "type": "object",
                                "xml": {
                                    "name": "pet"
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "required": [
                                    "name",
                                    "photoUrls"
                                ],
                                "properties": {
                                    "photoUrls": {
                                        "items": {
                                            "type": "string",
                                            "xml": {
                                                "name": "photoUrl"
                                            }
                                        },
                                        "type": "array",
                                        "xml": {
                                            "wrapped": true
                                        }
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "available",
                                            "pending",
                                            "sold"
                                        ],
                                        "description": "pet status in the store"
                                    },
                                    "category": {
                                        "properties": {
                                            "id": {
                                                "example": 1,
                                                "type": "integer",
                                                "format": "int64"
                                            },
                                            "name": {
                                                "example": "Dogs",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object",
                                        "xml": {
                                            "name": "category"
                                        }
                                    },
                                    "id": {
                                        "example": 10,
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "name": {
                                        "example": "doggie",
                                        "type": "string"
                                    },
                                    "tags": {
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object",
                                            "xml": {
                                                "name": "tag"
                                            }
                                        },
                                        "type": "array",
                                        "xml": {
                                            "wrapped": true
                                        }
                                    }
                                },
                                "type": "object",
                                "xml": {
                                    "name": "pet"
                                }
                            }
                        }
                    },
                    "required": true,
                    "x-resourceId": "1be38aa366c4b7daef5e4b527902a97b",
                    "description": "Create a new pet in the store"
                },
                "summary": "Add a new pet to the store",
                "operationId": "addPet",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "name",
                                        "photoUrls"
                                    ],
                                    "properties": {
                                        "photoUrls": {
                                            "items": {
                                                "type": "string",
                                                "xml": {
                                                    "name": "photoUrl"
                                                }
                                            },
                                            "type": "array",
                                            "xml": {
                                                "wrapped": true
                                            }
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "available",
                                                "pending",
                                                "sold"
                                            ],
                                            "description": "pet status in the store"
                                        },
                                        "category": {
                                            "properties": {
                                                "id": {
                                                    "example": 1,
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "name": {
                                                    "example": "Dogs",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object",
                                            "xml": {
                                                "name": "category"
                                            }
                                        },
                                        "id": {
                                            "example": 10,
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "name": {
                                            "example": "doggie",
                                            "type": "string"
                                        },
                                        "tags": {
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "xml": {
                                                    "name": "tag"
                                                }
                                            },
                                            "type": "array",
                                            "xml": {
                                                "wrapped": true
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "xml": {
                                        "name": "pet"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "required": [
                                        "name",
                                        "photoUrls"
                                    ],
                                    "properties": {
                                        "photoUrls": {
                                            "items": {
                                                "type": "string",
                                                "xml": {
                                                    "name": "photoUrl"
                                                }
                                            },
                                            "type": "array",
                                            "xml": {
                                                "wrapped": true
                                            }
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "available",
                                                "pending",
                                                "sold"
                                            ],
                                            "description": "pet status in the store"
                                        },
                                        "category": {
                                            "properties": {
                                                "id": {
                                                    "example": 1,
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "name": {
                                                    "example": "Dogs",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object",
                                            "xml": {
                                                "name": "category"
                                            }
                                        },
                                        "id": {
                                            "example": 10,
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "name": {
                                            "example": "doggie",
                                            "type": "string"
                                        },
                                        "tags": {
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "xml": {
                                                    "name": "tag"
                                                }
                                            },
                                            "type": "array",
                                            "xml": {
                                                "wrapped": true
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "xml": {
                                        "name": "pet"
                                    }
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "405": {
                        "description": "Invalid input"
                    },
                    "x-resourceId": "a9f0a3a63fe6b5bd954760c6ac09e85c"
                },
                "description": "Add a new pet to the store",
                "tags": [
                    "pet"
                ]
            }
        },
        "/store/order/{orderId}": {
            "get": {
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "orderId",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "ID of order that needs to be fetched"
                    }
                ],
                "x-resourceId": "5fa6862314dfadbaa593c5490b9672fb",
                "summary": "Find purchase order by ID",
                "operationId": "getOrderById",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "complete": {
                                            "type": "boolean"
                                        },
                                        "petId": {
                                            "example": 198772,
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "shipDate": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "status": {
                                            "example": "approved",
                                            "type": "string",
                                            "enum": [
                                                "placed",
                                                "approved",
                                                "delivered"
                                            ],
                                            "description": "Order Status"
                                        },
                                        "id": {
                                            "example": 10,
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "quantity": {
                                            "example": 7,
                                            "type": "integer",
                                            "format": "int32"
                                        }
                                    },
                                    "type": "object",
                                    "xml": {
                                        "name": "order"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "complete": {
                                            "type": "boolean"
                                        },
                                        "petId": {
                                            "example": 198772,
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "shipDate": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "status": {
                                            "example": "approved",
                                            "type": "string",
                                            "enum": [
                                                "placed",
                                                "approved",
                                                "delivered"
                                            ],
                                            "description": "Order Status"
                                        },
                                        "id": {
                                            "example": 10,
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "quantity": {
                                            "example": 7,
                                            "type": "integer",
                                            "format": "int32"
                                        }
                                    },
                                    "type": "object",
                                    "xml": {
                                        "name": "order"
                                    }
                                }
                            }
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Order not found"
                    },
                    "x-resourceId": "a9f0a3a63fe6b5bd954760c6ac09e85c"
                },
                "description": "For valid response try integer IDs with value <= 5 or > 10. Other values will generated exceptions",
                "tags": [
                    "store"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "orderId",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "ID of the order that needs to be deleted"
                    }
                ],
                "x-resourceId": "cb03759485822bb0424a6088c60a9b40",
                "summary": "Delete purchase order by ID",
                "operationId": "deleteOrder",
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Order not found"
                    },
                    "x-resourceId": "a9f0a3a63fe6b5bd954760c6ac09e85c"
                },
                "description": "For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors",
                "tags": [
                    "store"
                ]
            },
            "x-resourceId": "d5f85faafe6dd625e73abb68abba51d5"
        },
        "/user": {
            "x-resourceId": "810735b9b4ba8e1cc277a5cbe9f4d80a",
            "post": {
                "x-resourceId": "4d97e853d726a0675849d75af2a74b80",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "lastName": {
                                        "example": "James",
                                        "type": "string"
                                    },
                                    "userStatus": {
                                        "example": 1,
                                        "type": "integer",
                                        "description": "User Status",
                                        "format": "int32"
                                    },
                                    "password": {
                                        "example": "12345",
                                        "type": "string"
                                    },
                                    "id": {
                                        "example": 10,
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "firstName": {
                                        "example": "John",
                                        "type": "string"
                                    },
                                    "phone": {
                                        "example": "12345",
                                        "type": "string"
                                    },
                                    "username": {
                                        "example": "theUser",
                                        "type": "string"
                                    },
                                    "email": {
                                        "example": "john@email.com",
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "xml": {
                                    "name": "user"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "lastName": {
                                        "example": "James",
                                        "type": "string"
                                    },
                                    "userStatus": {
                                        "example": 1,
                                        "type": "integer",
                                        "description": "User Status",
                                        "format": "int32"
                                    },
                                    "password": {
                                        "example": "12345",
                                        "type": "string"
                                    },
                                    "id": {
                                        "example": 10,
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "firstName": {
                                        "example": "John",
                                        "type": "string"
                                    },
                                    "phone": {
                                        "example": "12345",
                                        "type": "string"
                                    },
                                    "username": {
                                        "example": "theUser",
                                        "type": "string"
                                    },
                                    "email": {
                                        "example": "john@email.com",
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "xml": {
                                    "name": "user"
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "lastName": {
                                        "example": "James",
                                        "type": "string"
                                    },
                                    "userStatus": {
                                        "example": 1,
                                        "type": "integer",
                                        "description": "User Status",
                                        "format": "int32"
                                    },
                                    "password": {
                                        "example": "12345",
                                        "type": "string"
                                    },
                                    "id": {
                                        "example": 10,
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "firstName": {
                                        "example": "John",
                                        "type": "string"
                                    },
                                    "phone": {
                                        "example": "12345",
                                        "type": "string"
                                    },
                                    "username": {
                                        "example": "theUser",
                                        "type": "string"
                                    },
                                    "email": {
                                        "example": "john@email.com",
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "xml": {
                                    "name": "user"
                                }
                            }
                        }
                    },
                    "x-resourceId": "1be38aa366c4b7daef5e4b527902a97b",
                    "description": "Created user object"
                },
                "summary": "Create user",
                "operationId": "createUser",
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "lastName": {
                                            "example": "James",
                                            "type": "string"
                                        },
                                        "userStatus": {
                                            "example": 1,
                                            "type": "integer",
                                            "description": "User Status",
                                            "format": "int32"
                                        },
                                        "password": {
                                            "example": "12345",
                                            "type": "string"
                                        },
                                        "id": {
                                            "example": 10,
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "firstName": {
                                            "example": "John",
                                            "type": "string"
                                        },
                                        "phone": {
                                            "example": "12345",
                                            "type": "string"
                                        },
                                        "username": {
                                            "example": "theUser",
                                            "type": "string"
                                        },
                                        "email": {
                                            "example": "john@email.com",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "xml": {
                                        "name": "user"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "lastName": {
                                            "example": "James",
                                            "type": "string"
                                        },
                                        "userStatus": {
                                            "example": 1,
                                            "type": "integer",
                                            "description": "User Status",
                                            "format": "int32"
                                        },
                                        "password": {
                                            "example": "12345",
                                            "type": "string"
                                        },
                                        "id": {
                                            "example": 10,
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "firstName": {
                                            "example": "John",
                                            "type": "string"
                                        },
                                        "phone": {
                                            "example": "12345",
                                            "type": "string"
                                        },
                                        "username": {
                                            "example": "theUser",
                                            "type": "string"
                                        },
                                        "email": {
                                            "example": "john@email.com",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "xml": {
                                        "name": "user"
                                    }
                                }
                            }
                        },
                        "description": "successful operation"
                    },
                    "x-resourceId": "a9f0a3a63fe6b5bd954760c6ac09e85c"
                },
                "description": "This can only be done by the logged in user.",
                "tags": [
                    "user"
                ]
            }
        },
        "/user/logout": {
            "get": {
                "parameters": [],
                "x-resourceId": "e2a0394eab84a212c5ff4c9f881ed910",
                "summary": "Logs out current logged in user session",
                "operationId": "logoutUser",
                "responses": {
                    "default": {
                        "description": "successful operation"
                    },
                    "x-resourceId": "a9f0a3a63fe6b5bd954760c6ac09e85c"
                },
                "description": "",
                "tags": [
                    "user"
                ]
            },
            "x-resourceId": "b54784ebcd9b6c0e1052ec48bde5df5f"
        },
        "/user/createWithList": {
            "x-resourceId": "5936e0b2a60167930b7a53311310a801",
            "post": {
                "x-resourceId": "173731a08498f046aa58a18eb532eba0",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "properties": {
                                        "lastName": {
                                            "example": "James",
                                            "type": "string"
                                        },
                                        "userStatus": {
                                            "example": 1,
                                            "type": "integer",
                                            "description": "User Status",
                                            "format": "int32"
                                        },
                                        "password": {
                                            "example": "12345",
                                            "type": "string"
                                        },
                                        "id": {
                                            "example": 10,
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "firstName": {
                                            "example": "John",
                                            "type": "string"
                                        },
                                        "phone": {
                                            "example": "12345",
                                            "type": "string"
                                        },
                                        "username": {
                                            "example": "theUser",
                                            "type": "string"
                                        },
                                        "email": {
                                            "example": "john@email.com",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "xml": {
                                        "name": "user"
                                    }
                                },
                                "type": "array"
                            }
                        }
                    },
                    "x-resourceId": "1be38aa366c4b7daef5e4b527902a97b"
                },
                "summary": "Creates list of users with given input array",
                "operationId": "createUsersWithListInput",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "lastName": {
                                            "example": "James",
                                            "type": "string"
                                        },
                                        "userStatus": {
                                            "example": 1,
                                            "type": "integer",
                                            "description": "User Status",
                                            "format": "int32"
                                        },
                                        "password": {
                                            "example": "12345",
                                            "type": "string"
                                        },
                                        "id": {
                                            "example": 10,
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "firstName": {
                                            "example": "John",
                                            "type": "string"
                                        },
                                        "phone": {
                                            "example": "12345",
                                            "type": "string"
                                        },
                                        "username": {
                                            "example": "theUser",
                                            "type": "string"
                                        },
                                        "email": {
                                            "example": "john@email.com",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "xml": {
                                        "name": "user"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "lastName": {
                                            "example": "James",
                                            "type": "string"
                                        },
                                        "userStatus": {
                                            "example": 1,
                                            "type": "integer",
                                            "description": "User Status",
                                            "format": "int32"
                                        },
                                        "password": {
                                            "example": "12345",
                                            "type": "string"
                                        },
                                        "id": {
                                            "example": 10,
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "firstName": {
                                            "example": "John",
                                            "type": "string"
                                        },
                                        "phone": {
                                            "example": "12345",
                                            "type": "string"
                                        },
                                        "username": {
                                            "example": "theUser",
                                            "type": "string"
                                        },
                                        "email": {
                                            "example": "john@email.com",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "xml": {
                                        "name": "user"
                                    }
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "default": {
                        "description": "successful operation"
                    },
                    "x-resourceId": "a9f0a3a63fe6b5bd954760c6ac09e85c"
                },
                "description": "Creates list of users with given input array",
                "tags": [
                    "user"
                ]
            }
        },
        "/pet/findByTags": {
            "get": {
                "security": [
                    {
                        "petstore_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "explode": true,
                        "required": false,
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Tags to filter by"
                    }
                ],
                "x-resourceId": "69ee93cbb2649f3b83c2633bdf0237c5",
                "summary": "Finds Pets by tags",
                "operationId": "findPetsByTags",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "required": [
                                            "name",
                                            "photoUrls"
                                        ],
                                        "properties": {
                                            "photoUrls": {
                                                "items": {
                                                    "type": "string",
                                                    "xml": {
                                                        "name": "photoUrl"
                                                    }
                                                },
                                                "type": "array",
                                                "xml": {
                                                    "wrapped": true
                                                }
                                            },
                                            "status": {
                                                "type": "string",
                                                "enum": [
                                                    "available",
                                                    "pending",
                                                    "sold"
                                                ],
                                                "description": "pet status in the store"
                                            },
                                            "category": {
                                                "properties": {
                                                    "id": {
                                                        "example": 1,
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "name": {
                                                        "example": "Dogs",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "xml": {
                                                    "name": "category"
                                                }
                                            },
                                            "id": {
                                                "example": 10,
                                                "type": "integer",
                                                "format": "int64"
                                            },
                                            "name": {
                                                "example": "doggie",
                                                "type": "string"
                                            },
                                            "tags": {
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "xml": {
                                                        "name": "tag"
                                                    }
                                                },
                                                "type": "array",
                                                "xml": {
                                                    "wrapped": true
                                                }
                                            }
                                        },
                                        "type": "object",
                                        "xml": {
                                            "name": "pet"
                                        }
                                    },
                                    "type": "array"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "items": {
                                        "required": [
                                            "name",
                                            "photoUrls"
                                        ],
                                        "properties": {
                                            "photoUrls": {
                                                "items": {
                                                    "type": "string",
                                                    "xml": {
                                                        "name": "photoUrl"
                                                    }
                                                },
                                                "type": "array",
                                                "xml": {
                                                    "wrapped": true
                                                }
                                            },
                                            "status": {
                                                "type": "string",
                                                "enum": [
                                                    "available",
                                                    "pending",
                                                    "sold"
                                                ],
                                                "description": "pet status in the store"
                                            },
                                            "category": {
                                                "properties": {
                                                    "id": {
                                                        "example": 1,
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "name": {
                                                        "example": "Dogs",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "xml": {
                                                    "name": "category"
                                                }
                                            },
                                            "id": {
                                                "example": 10,
                                                "type": "integer",
                                                "format": "int64"
                                            },
                                            "name": {
                                                "example": "doggie",
                                                "type": "string"
                                            },
                                            "tags": {
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "xml": {
                                                        "name": "tag"
                                                    }
                                                },
                                                "type": "array",
                                                "xml": {
                                                    "wrapped": true
                                                }
                                            }
                                        },
                                        "type": "object",
                                        "xml": {
                                            "name": "pet"
                                        }
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid tag value"
                    },
                    "x-resourceId": "a9f0a3a63fe6b5bd954760c6ac09e85c"
                },
                "description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
                "tags": [
                    "pet"
                ]
            },
            "x-resourceId": "10b5d88630d252e92be55aac9d12cea7"
        },
        "/store/inventory": {
            "get": {
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "x-resourceId": "cb2e242a67eb7f3aabc72352458bf436",
                "summary": "Returns pet inventories by status",
                "operationId": "getInventory",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "successful operation"
                    },
                    "x-resourceId": "a9f0a3a63fe6b5bd954760c6ac09e85c"
                },
                "description": "Returns a map of status codes to quantities",
                "tags": [
                    "store"
                ]
            },
            "x-resourceId": "df5e972cdd7a2d1ecea54659dae54793"
        },
        "/user/{username}": {
            "put": {
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "username",
                        "schema": {
                            "type": "string"
                        },
                        "description": "name that need to be deleted"
                    }
                ],
                "x-resourceId": "215d3ef41529ade8d17c4e3def8f62ae",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "lastName": {
                                        "example": "James",
                                        "type": "string"
                                    },
                                    "userStatus": {
                                        "example": 1,
                                        "type": "integer",
                                        "description": "User Status",
                                        "format": "int32"
                                    },
                                    "password": {
                                        "example": "12345",
                                        "type": "string"
                                    },
                                    "id": {
                                        "example": 10,
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "firstName": {
                                        "example": "John",
                                        "type": "string"
                                    },
                                    "phone": {
                                        "example": "12345",
                                        "type": "string"
                                    },
                                    "username": {
                                        "example": "theUser",
                                        "type": "string"
                                    },
                                    "email": {
                                        "example": "john@email.com",
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "xml": {
                                    "name": "user"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "lastName": {
                                        "example": "James",
                                        "type": "string"
                                    },
                                    "userStatus": {
                                        "example": 1,
                                        "type": "integer",
                                        "description": "User Status",
                                        "format": "int32"
                                    },
                                    "password": {
                                        "example": "12345",
                                        "type": "string"
                                    },
                                    "id": {
                                        "example": 10,
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "firstName": {
                                        "example": "John",
                                        "type": "string"
                                    },
                                    "phone": {
                                        "example": "12345",
                                        "type": "string"
                                    },
                                    "username": {
                                        "example": "theUser",
                                        "type": "string"
                                    },
                                    "email": {
                                        "example": "john@email.com",
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "xml": {
                                    "name": "user"
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "properties": {
                                    "lastName": {
                                        "example": "James",
                                        "type": "string"
                                    },
                                    "userStatus": {
                                        "example": 1,
                                        "type": "integer",
                                        "description": "User Status",
                                        "format": "int32"
                                    },
                                    "password": {
                                        "example": "12345",
                                        "type": "string"
                                    },
                                    "id": {
                                        "example": 10,
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "firstName": {
                                        "example": "John",
                                        "type": "string"
                                    },
                                    "phone": {
                                        "example": "12345",
                                        "type": "string"
                                    },
                                    "username": {
                                        "example": "theUser",
                                        "type": "string"
                                    },
                                    "email": {
                                        "example": "john@email.com",
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "xml": {
                                    "name": "user"
                                }
                            }
                        }
                    },
                    "x-resourceId": "1be38aa366c4b7daef5e4b527902a97b",
                    "description": "Update an existent user in the store"
                },
                "summary": "Update user",
                "operationId": "updateUser",
                "responses": {
                    "default": {
                        "description": "successful operation"
                    },
                    "x-resourceId": "a9f0a3a63fe6b5bd954760c6ac09e85c"
                },
                "description": "This can only be done by the logged in user.",
                "tags": [
                    "user"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "username",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The name that needs to be fetched. Use user1 for testing. "
                    }
                ],
                "x-resourceId": "b7306ef814f95acfd7a726bc8b8af71e",
                "summary": "Get user by user name",
                "operationId": "getUserByName",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "lastName": {
                                            "example": "James",
                                            "type": "string"
                                        },
                                        "userStatus": {
                                            "example": 1,
                                            "type": "integer",
                                            "description": "User Status",
                                            "format": "int32"
                                        },
                                        "password": {
                                            "example": "12345",
                                            "type": "string"
                                        },
                                        "id": {
                                            "example": 10,
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "firstName": {
                                            "example": "John",
                                            "type": "string"
                                        },
                                        "phone": {
                                            "example": "12345",
                                            "type": "string"
                                        },
                                        "username": {
                                            "example": "theUser",
                                            "type": "string"
                                        },
                                        "email": {
                                            "example": "john@email.com",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "xml": {
                                        "name": "user"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "properties": {
                                        "lastName": {
                                            "example": "James",
                                            "type": "string"
                                        },
                                        "userStatus": {
                                            "example": 1,
                                            "type": "integer",
                                            "description": "User Status",
                                            "format": "int32"
                                        },
                                        "password": {
                                            "example": "12345",
                                            "type": "string"
                                        },
                                        "id": {
                                            "example": 10,
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "firstName": {
                                            "example": "John",
                                            "type": "string"
                                        },
                                        "phone": {
                                            "example": "12345",
                                            "type": "string"
                                        },
                                        "username": {
                                            "example": "theUser",
                                            "type": "string"
                                        },
                                        "email": {
                                            "example": "john@email.com",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "xml": {
                                        "name": "user"
                                    }
                                }
                            }
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "x-resourceId": "a9f0a3a63fe6b5bd954760c6ac09e85c"
                },
                "description": "",
                "tags": [
                    "user"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "username",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The name that needs to be deleted"
                    }
                ],
                "x-resourceId": "11eaed566122d301766b97dd2fe8aac5",
                "summary": "Delete user",
                "operationId": "deleteUser",
                "responses": {
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "x-resourceId": "a9f0a3a63fe6b5bd954760c6ac09e85c"
                },
                "description": "This can only be done by the logged in user.",
                "tags": [
                    "user"
                ]
            },
            "x-resourceId": "a9196afc5a0661fa34f5b562f4fb3886"
        }
    }
}